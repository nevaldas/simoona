﻿﻿
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * T4ResX
 * Author  Robert Hoffmann (itechnology)
 * License MIT / http://bit.ly/mit-license
 *
 * Version 1.00
 * https://github.com/itechnology/T4ResX
 */ 
 using System;
 using System.Linq; 
 using System.Threading;
 using System.Reflection;
 using System.Collections.Generic; 
 using System.Text.RegularExpressions;
 using Shrooms.Resources.Helpers;

 namespace Shrooms.Resources {
	/// <summary>
	/// Class that contains all our little helper functions
	/// </summary>
	public static class Utilities {
		/// <summary>
		/// A fake attribute that allows us to filter classes by Attribute
		/// It's helpfull when using GetResourcesByNameSpace(), and when T4ResX is tossed into a project containing other classes/properties
		/// Like this we only return stuff generated by T4ResX itself
		/// </summary>
		public class Localized : Attribute {}

		///<summary>
		/// We bind this function to our replacement function when needed
		/// Like this the replacement function can reside in any assembly you like
		/// Bind it once on ApplicationStart, or rebind it to a different replacement function before calling it
		///
		/// Poor Man's IOC
		/// http://www.i-technology.net
		///</summary>
		public static Func<string, string> GetReplacementString = key => key;
		
		#region Methods
		
		public static string GetLocalizedJs(string ns)
		{
			return string.Format("var ResX = {0};", Utilities.GetResourcesByNameSpace(ns).ToJson());
		}

		/// <summary>
		/// Look up ressources from a specific namespace
		/// </summary>
		/// <param name="ns">Namspace to get resources from</param>
		/// <returns>Dictionary&lt;namespace, Dictionary&lt;key, value&gt;&gt;</returns>
		public static Dictionary<string, Dictionary<string, string>> GetResourcesByNameSpace(string ns)
		{
			var result = new Dictionary<string, Dictionary<string, string>>();

			if (ns == null)
				ns = string.Empty;

			var qs = ns.Split('^');
				ns = qs[0];

			var path  = string.IsNullOrEmpty(ns) ? "Shrooms.Resources" : ns;
			var wCard = path;

			if (ns.EndsWith(".*"))
			{
				wCard = path.Replace(".*", "");
			}
			
			var current = Assembly.GetExecutingAssembly();
			current
				.GetTypes()
				.Where(type => type.GetCustomAttributes(typeof(Localized), false).Length != 0)
				.Where(type => type.Namespace != null && (ns == "" || (ns.EndsWith(".*")
																		   ? type.Namespace.StartsWith(wCard, StringComparison.InvariantCultureIgnoreCase)
																		   : string.Equals(type.Namespace, path, StringComparison.InvariantCultureIgnoreCase)))
				 )
				.Where(type => qs.Length != 2 || Regex.IsMatch(type.Name, qs[1], RegexOptions.CultureInvariant | RegexOptions.IgnoreCase | RegexOptions.Singleline))
				.ToList()
				.ForEach(typeFound =>
				{
					var instance = current.CreateInstance(typeFound.FullName);
					if (instance != null)
					{
						var instanceType  = instance.GetType();
						var instanceClass = instanceType.FullName.Replace(wCard, "");
						var propertyList  = new Dictionary<string, string>();

						instanceType
							.GetProperties()
							.Where(t => t.GetCustomAttributes(typeof(Localized), false).Length != 0)
							.ToList()
							.ForEach(property => propertyList.Add(property.Name, property.GetValue(null, null).ToString()));

						if (propertyList.Count > 0)
						{
							result.Add(instanceClass.StartsWith(".") ? instanceClass.Substring(1) : instanceClass, propertyList);
						}
					}
				});

			return result;
		}
		#endregion
	}
 }
	

namespace Shrooms.Resources  {
	[Utilities.Localized]	
	public partial class Common {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("^Common");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Common", typeof(Common).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Edit</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Edit { get { return GetResourceString(EditKey); } }

		/// <summary>
		/// Resource key for <see cref="Edit"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EditKey = "Edit";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{0} - is required field</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string MessageRequiredFieldFormatted(params object[] args) { return GetResourceString("MessageRequiredField", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{0} - is required field</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string MessageRequiredField { get { return GetResourceString(MessageRequiredFieldKey); } }

		/// <summary>
		/// Resource key for <see cref="MessageRequiredField"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string MessageRequiredFieldKey = "MessageRequiredField";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>No</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string No { get { return GetResourceString(NoKey); } }

		/// <summary>
		/// Resource key for <see cref="No"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NoKey = "No";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Yes</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Yes { get { return GetResourceString(YesKey); } }

		/// <summary>
		/// Resource key for <see cref="Yes"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string YesKey = "Yes";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{0} does not exist</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string DoesNotExistFormatted(params object[] args) { return GetResourceString("DoesNotExist", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{0} does not exist</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string DoesNotExist { get { return GetResourceString(DoesNotExistKey); } }

		/// <summary>
		/// Resource key for <see cref="DoesNotExist"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string DoesNotExistKey = "DoesNotExist";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>The field {0} can not  be longer than {1} characters</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string MaxLengthErrorFormatted(params object[] args) { return GetResourceString("MaxLengthError", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>The field {0} can not  be longer than {1} characters</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string MaxLengthError { get { return GetResourceString(MaxLengthErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="MaxLengthError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string MaxLengthErrorKey = "MaxLengthError";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{0} is required field</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string RequiredErrorFormatted(params object[] args) { return GetResourceString("RequiredError", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{0} is required field</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string RequiredError { get { return GetResourceString(RequiredErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="RequiredError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string RequiredErrorKey = "RequiredError";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>The field {0} must be between {2} and {1} characters</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string StringLengthErrorFormatted(params object[] args) { return GetResourceString("StringLengthError", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>The field {0} must be between {2} and {1} characters</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string StringLengthError { get { return GetResourceString(StringLengthErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="StringLengthError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string StringLengthErrorKey = "StringLengthError";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{0} and {1} do not match.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string CompareErrorFormatted(params object[] args) { return GetResourceString("CompareError", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{0} and {1} do not match.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string CompareError { get { return GetResourceString(CompareErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="CompareError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string CompareErrorKey = "CompareError";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Invalid e-mail address</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmailAddressError { get { return GetResourceString(EmailAddressErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="EmailAddressError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailAddressErrorKey = "EmailAddressError";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Invalid phone number</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string PhoneError { get { return GetResourceString(PhoneErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="PhoneError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string PhoneErrorKey = "PhoneError";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Confirm user</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ConfirmUser { get { return GetResourceString(ConfirmUserKey); } }

		/// <summary>
		/// Resource key for <see cref="ConfirmUser"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ConfirmUserKey = "ConfirmUser";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New user has logged in for the first time, updated his profile and is now waiting to be confirmed by an admin.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NewUserConfirmEmailMessage { get { return GetResourceString(NewUserConfirmEmailMessageKey); } }

		/// <summary>
		/// Resource key for <see cref="NewUserConfirmEmailMessage"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NewUserConfirmEmailMessageKey = "NewUserConfirmEmailMessage";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Your registration has been confirmed</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NewUserConfirmedNotificationEmailSubject { get { return GetResourceString(NewUserConfirmedNotificationEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="NewUserConfirmedNotificationEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NewUserConfirmedNotificationEmailSubjectKey = "NewUserConfirmedNotificationEmailSubject";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Admin has changed one of your service request&apos;s status to &quot;{0}&quot;</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string ServiceRequestAdminChangedStatusMessageFormatted(params object[] args) { return GetResourceString("ServiceRequestAdminChangedStatusMessage", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Admin has changed one of your service request&apos;s status to &quot;{0}&quot;</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ServiceRequestAdminChangedStatusMessage { get { return GetResourceString(ServiceRequestAdminChangedStatusMessageKey); } }

		/// <summary>
		/// Resource key for <see cref="ServiceRequestAdminChangedStatusMessage"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ServiceRequestAdminChangedStatusMessageKey = "ServiceRequestAdminChangedStatusMessage";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Your service request status has changed</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ServiceRequestAdminChangedStatusSubject { get { return GetResourceString(ServiceRequestAdminChangedStatusSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="ServiceRequestAdminChangedStatusSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ServiceRequestAdminChangedStatusSubjectKey = "ServiceRequestAdminChangedStatusSubject";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Admin has commented on one of your service requests.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ServiceRequestAdminCommentedMessage { get { return GetResourceString(ServiceRequestAdminCommentedMessageKey); } }

		/// <summary>
		/// Resource key for <see cref="ServiceRequestAdminCommentedMessage"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ServiceRequestAdminCommentedMessageKey = "ServiceRequestAdminCommentedMessage";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>There is a new comment on Your service request</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ServiceRequestAdminCommentedSubject { get { return GetResourceString(ServiceRequestAdminCommentedSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="ServiceRequestAdminCommentedSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ServiceRequestAdminCommentedSubjectKey = "ServiceRequestAdminCommentedSubject";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Day</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Day { get { return GetResourceString(DayKey); } }

		/// <summary>
		/// Resource key for <see cref="Day"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string DayKey = "Day";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Can&apos;t set self as manager or create manager references circle</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string WrongManager { get { return GetResourceString(WrongManagerKey); } }

		/// <summary>
		/// Resource key for <see cref="WrongManager"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string WrongManagerKey = "WrongManager";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>committee got a new suggestion</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string CommitteeSuggestionsEmailBody { get { return GetResourceString(CommitteeSuggestionsEmailBodyKey); } }

		/// <summary>
		/// Resource key for <see cref="CommitteeSuggestionsEmailBody"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string CommitteeSuggestionsEmailBodyKey = "CommitteeSuggestionsEmailBody";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New suggestion for {0}</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string CommitteeSuggestionEmailSubjectFormatted(params object[] args) { return GetResourceString("CommitteeSuggestionEmailSubject", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New suggestion for {0}</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string CommitteeSuggestionEmailSubject { get { return GetResourceString(CommitteeSuggestionEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="CommitteeSuggestionEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string CommitteeSuggestionEmailSubjectKey = "CommitteeSuggestionEmailSubject";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>No entry with such id was found.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NotFound { get { return GetResourceString(NotFoundKey); } }

		/// <summary>
		/// Resource key for <see cref="NotFound"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NotFoundKey = "NotFound";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Birthday date can not be later than today</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string BirthdayDateValidationError { get { return GetResourceString(BirthdayDateValidationErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="BirthdayDateValidationError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string BirthdayDateValidationErrorKey = "BirthdayDateValidationError";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Smallest possible date is 1900-01-01</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string BirthdayDateIsTooOld { get { return GetResourceString(BirthdayDateIsTooOldKey); } }

		/// <summary>
		/// Resource key for <see cref="BirthdayDateIsTooOld"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string BirthdayDateIsTooOldKey = "BirthdayDateIsTooOld";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>For more news please visit our</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmailSignatureText { get { return GetResourceString(EmailSignatureTextKey); } }

		/// <summary>
		/// Resource key for <see cref="EmailSignatureText"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailSignatureTextKey = "EmailSignatureText";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Birthday date is not set</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string BirthdayNotSet { get { return GetResourceString(BirthdayNotSetKey); } }

		/// <summary>
		/// Resource key for <see cref="BirthdayNotSet"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string BirthdayNotSetKey = "BirthdayNotSet";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Admin has confirmed your registration, you can now log in</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NewUserConfirmedNotificationEmailMessage { get { return GetResourceString(NewUserConfirmedNotificationEmailMessageKey); } }

		/// <summary>
		/// Resource key for <see cref="NewUserConfirmedNotificationEmailMessage"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NewUserConfirmedNotificationEmailMessageKey = "NewUserConfirmedNotificationEmailMessage";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New user awaits confirmation</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NewUserConfirmEmailSubject { get { return GetResourceString(NewUserConfirmEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="NewUserConfirmEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NewUserConfirmEmailSubjectKey = "NewUserConfirmEmailSubject";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Comment body</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string CommentMessageBody { get { return GetResourceString(CommentMessageBodyKey); } }

		/// <summary>
		/// Resource key for <see cref="CommentMessageBody"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string CommentMessageBodyKey = "CommentMessageBody";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Message can not be empty.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmptyMessageError { get { return GetResourceString(EmptyMessageErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="EmptyMessageError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmptyMessageErrorKey = "EmptyMessageError";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Post body</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string PostMessageBody { get { return GetResourceString(PostMessageBodyKey); } }

		/// <summary>
		/// Resource key for <see cref="PostMessageBody"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string PostMessageBodyKey = "PostMessageBody";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Reset Password</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string UserResetPasswordEmailSubject { get { return GetResourceString(UserResetPasswordEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="UserResetPasswordEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string UserResetPasswordEmailSubjectKey = "UserResetPasswordEmailSubject";

		

	}
}


namespace Shrooms.Resources  {
		
	public partial class Common {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Verify your e-mail address</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string UserVerifyEmailSubject { get { return GetResourceString(UserVerifyEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="UserVerifyEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string UserVerifyEmailSubjectKey = "UserVerifyEmailSubject";

		

	}
}


namespace Shrooms.Resources.Emails  {
	[Utilities.Localized]	
	public partial class Templates {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Emails^Templates");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Emails.Templates", typeof(Templates).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Today&apos;s birthdays</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string BirthdaysNotificationEmailSubject { get { return GetResourceString(BirthdaysNotificationEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="BirthdaysNotificationEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string BirthdaysNotificationEmailSubjectKey = "BirthdaysNotificationEmailSubject";

		

	}
}


namespace Shrooms.Resources.Emails  {
		
	public partial class Templates {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Simoona</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string DefaultEmailSubject { get { return GetResourceString(DefaultEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="DefaultEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string DefaultEmailSubjectKey = "DefaultEmailSubject";

		

	}
}


namespace Shrooms.Resources.Emails  {
		
	public partial class Templates {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>&lt;a&gt;&lt;hr&gt;&lt;u&gt;&lt;/u&gt;For more news check our &lt;/a&gt;&lt;a href=&apos;{0}&apos; target=&apos;_blank&apos;&gt;Simoona&lt;/a&gt;</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string DefaultNotificationSignatureFormatted(params object[] args) { return GetResourceString("DefaultNotificationSignature", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>&lt;a&gt;&lt;hr&gt;&lt;u&gt;&lt;/u&gt;For more news check our &lt;/a&gt;&lt;a href=&apos;{0}&apos; target=&apos;_blank&apos;&gt;Simoona&lt;/a&gt;</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string DefaultNotificationSignature { get { return GetResourceString(DefaultNotificationSignatureKey); } }

		/// <summary>
		/// Resource key for <see cref="DefaultNotificationSignature"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string DefaultNotificationSignatureKey = "DefaultNotificationSignature";

		

	}
}


namespace Shrooms.Resources.Emails  {
		
	public partial class Templates {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>&lt;p&gt;&lt;a href=&quot;{0}&quot;&gt;{1}&lt;/a&gt;&lt;br&gt;{2}&lt;/p&gt;</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string EventPostNotificationBodyFormatted(params object[] args) { return GetResourceString("EventPostNotificationBody", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>&lt;p&gt;&lt;a href=&quot;{0}&quot;&gt;{1}&lt;/a&gt;&lt;br&gt;{2}&lt;/p&gt;</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EventPostNotificationBody { get { return GetResourceString(EventPostNotificationBodyKey); } }

		/// <summary>
		/// Resource key for <see cref="EventPostNotificationBody"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EventPostNotificationBodyKey = "EventPostNotificationBody";

		

	}
}


namespace Shrooms.Resources.Emails  {
		
	public partial class Templates {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New message in {0}</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string EventPostNotificationSubjectFormatted(params object[] args) { return GetResourceString("EventPostNotificationSubject", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New message in {0}</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EventPostNotificationSubject { get { return GetResourceString(EventPostNotificationSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="EventPostNotificationSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EventPostNotificationSubjectKey = "EventPostNotificationSubject";

		

	}
}


namespace Shrooms.Resources.Emails  {
		
	public partial class Templates {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New comment in &quot;{0}&quot; post by {1}</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string NewPostCommentEmailSubjectFormatted(params object[] args) { return GetResourceString("NewPostCommentEmailSubject", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New comment in &quot;{0}&quot; post by {1}</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NewPostCommentEmailSubject { get { return GetResourceString(NewPostCommentEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="NewPostCommentEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NewPostCommentEmailSubjectKey = "NewPostCommentEmailSubject";

		

	}
}


namespace Shrooms.Resources.Emails  {
		
	public partial class Templates {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New post in {0} by {1}</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string NewWallPostEmailSubjectFormatted(params object[] args) { return GetResourceString("NewWallPostEmailSubject", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New post in {0} by {1}</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NewWallPostEmailSubject { get { return GetResourceString(NewWallPostEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="NewWallPostEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NewWallPostEmailSubjectKey = "NewWallPostEmailSubject";

		

	}
}


namespace Shrooms.Resources.Models.Account  {
	[Utilities.Localized]	
	public partial class Account {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.Account^Account");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.Account.Account", typeof(Account).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Email &apos;{0}&apos; is already taken.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string DuplicateEmailFormatted(params object[] args) { return GetResourceString("DuplicateEmail", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Email &apos;{0}&apos; is already taken.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string DuplicateEmail { get { return GetResourceString(DuplicateEmailKey); } }

		/// <summary>
		/// Resource key for <see cref="DuplicateEmail"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string DuplicateEmailKey = "DuplicateEmail";

		

	}
}


namespace Shrooms.Resources.Models.Account  {
		
	public partial class Account {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Email &apos;{0}&apos; is invalid.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string InvalidEmailFormatted(params object[] args) { return GetResourceString("InvalidEmail", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Email &apos;{0}&apos; is invalid.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string InvalidEmail { get { return GetResourceString(InvalidEmailKey); } }

		/// <summary>
		/// Resource key for <see cref="InvalidEmail"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string InvalidEmailKey = "InvalidEmail";

		

	}
}


namespace Shrooms.Resources.Models.Account  {
		
	public partial class Account {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Username &apos;{0}&apos; is invalid.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string InvalidUserNameFormatted(params object[] args) { return GetResourceString("InvalidUserName", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Username &apos;{0}&apos; is invalid.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string InvalidUserName { get { return GetResourceString(InvalidUserNameKey); } }

		/// <summary>
		/// Resource key for <see cref="InvalidUserName"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string InvalidUserNameKey = "InvalidUserName";

		

	}
}


namespace Shrooms.Resources.Models.Account  {
		
	public partial class Account {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{0} cannot be null or empty</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string PropertyTooShortFormatted(params object[] args) { return GetResourceString("PropertyTooShort", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{0} cannot be null or empty</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string PropertyTooShort { get { return GetResourceString(PropertyTooShortKey); } }

		/// <summary>
		/// Resource key for <see cref="PropertyTooShort"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string PropertyTooShortKey = "PropertyTooShort";

		

	}
}


namespace Shrooms.Resources.Models.Account  {
		
	public partial class Account {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Username &apos;{0}&apos; is already taken.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string DuplicateNameFormatted(params object[] args) { return GetResourceString("DuplicateName", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Username &apos;{0}&apos; is already taken.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string DuplicateName { get { return GetResourceString(DuplicateNameKey); } }

		/// <summary>
		/// Resource key for <see cref="DuplicateName"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string DuplicateNameKey = "DuplicateName";

		

	}
}


namespace Shrooms.Resources.Models.Account  {
		
	public partial class Account {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Current password</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string CurrentPassword { get { return GetResourceString(CurrentPasswordKey); } }

		/// <summary>
		/// Resource key for <see cref="CurrentPassword"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string CurrentPasswordKey = "CurrentPassword";

		

	}
}


namespace Shrooms.Resources.Models.Account  {
		
	public partial class Account {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Password is too short</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string PasswordLengthInvalid { get { return GetResourceString(PasswordLengthInvalidKey); } }

		/// <summary>
		/// Resource key for <see cref="PasswordLengthInvalid"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string PasswordLengthInvalidKey = "PasswordLengthInvalid";

		

	}
}


namespace Shrooms.Resources.Models.Account  {
		
	public partial class Account {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Passwords don&apos;t match</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ValidationPasswordDontMatch { get { return GetResourceString(ValidationPasswordDontMatchKey); } }

		/// <summary>
		/// Resource key for <see cref="ValidationPasswordDontMatch"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ValidationPasswordDontMatchKey = "ValidationPasswordDontMatch";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
	[Utilities.Localized]	
	public partial class ApplicationUser {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.ApplicationUser^ApplicationUser");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.ApplicationUser.ApplicationUser", typeof(ApplicationUser).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>User</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EntityName { get { return GetResourceString(EntityNameKey); } }

		/// <summary>
		/// Resource key for <see cref="EntityName"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EntityNameKey = "EntityName";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>First name</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string FirstName { get { return GetResourceString(FirstNameKey); } }

		/// <summary>
		/// Resource key for <see cref="FirstName"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string FirstNameKey = "FirstName";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Job title</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string JobTitle { get { return GetResourceString(JobTitleKey); } }

		/// <summary>
		/// Resource key for <see cref="JobTitle"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string JobTitleKey = "JobTitle";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Last name</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string LastName { get { return GetResourceString(LastNameKey); } }

		/// <summary>
		/// Resource key for <see cref="LastName"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string LastNameKey = "LastName";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Phone number</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string PhoneNumber { get { return GetResourceString(PhoneNumberKey); } }

		/// <summary>
		/// Resource key for <see cref="PhoneNumber"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string PhoneNumberKey = "PhoneNumber";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Qualification</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string QualificationLevelName { get { return GetResourceString(QualificationLevelNameKey); } }

		/// <summary>
		/// Resource key for <see cref="QualificationLevelName"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string QualificationLevelNameKey = "QualificationLevelName";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Failed to create new project.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string FailedToCreateNewProject { get { return GetResourceString(FailedToCreateNewProjectKey); } }

		/// <summary>
		/// Resource key for <see cref="FailedToCreateNewProject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string FailedToCreateNewProjectKey = "FailedToCreateNewProject";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>User not allowed to create new projects</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NotAllowedToCreateProjects { get { return GetResourceString(NotAllowedToCreateProjectsKey); } }

		/// <summary>
		/// Resource key for <see cref="NotAllowedToCreateProjects"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NotAllowedToCreateProjectsKey = "NotAllowedToCreateProjects";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>The user name or password is incorrect.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string IncorrectPasswordOrUserName { get { return GetResourceString(IncorrectPasswordOrUserNameKey); } }

		/// <summary>
		/// Resource key for <see cref="IncorrectPasswordOrUserName"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string IncorrectPasswordOrUserNameKey = "IncorrectPasswordOrUserName";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Birth date</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Birthday { get { return GetResourceString(BirthdayKey); } }

		/// <summary>
		/// Resource key for <see cref="Birthday"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string BirthdayKey = "Birthday";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Manager</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Manager { get { return GetResourceString(ManagerKey); } }

		/// <summary>
		/// Resource key for <see cref="Manager"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ManagerKey = "Manager";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Working hours</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string WorkingHours { get { return GetResourceString(WorkingHoursKey); } }

		/// <summary>
		/// Resource key for <see cref="WorkingHours"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string WorkingHoursKey = "WorkingHours";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Passwords must have at least one lowercase (&apos;a&apos;-&apos;z&apos;).</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string PasswordErrorMustContainLowerCase { get { return GetResourceString(PasswordErrorMustContainLowerCaseKey); } }

		/// <summary>
		/// Resource key for <see cref="PasswordErrorMustContainLowerCase"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string PasswordErrorMustContainLowerCaseKey = "PasswordErrorMustContainLowerCase";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Passwords must have at least one digit (&apos;0&apos;-&apos;9&apos;).</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string PasswordErrorMustContainDigit { get { return GetResourceString(PasswordErrorMustContainDigitKey); } }

		/// <summary>
		/// Resource key for <see cref="PasswordErrorMustContainDigit"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string PasswordErrorMustContainDigitKey = "PasswordErrorMustContainDigit";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Passwords must have at least one uppercase (&apos;A&apos;-&apos;Z&apos;).</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string PasswordErrorMustContainUpperCase { get { return GetResourceString(PasswordErrorMustContainUpperCaseKey); } }

		/// <summary>
		/// Resource key for <see cref="PasswordErrorMustContainUpperCase"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string PasswordErrorMustContainUpperCaseKey = "PasswordErrorMustContainUpperCase";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Working time does not match part time hours</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string IncorrectHours { get { return GetResourceString(IncorrectHoursKey); } }

		/// <summary>
		/// Resource key for <see cref="IncorrectHours"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string IncorrectHoursKey = "IncorrectHours";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Lunch hours should be between working hours</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string IncorrectLunchHours { get { return GetResourceString(IncorrectLunchHoursKey); } }

		/// <summary>
		/// Resource key for <see cref="IncorrectLunchHours"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string IncorrectLunchHoursKey = "IncorrectLunchHours";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Please enter part time hours</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string PartTimeHoursEmpty { get { return GetResourceString(PartTimeHoursEmptyKey); } }

		/// <summary>
		/// Resource key for <see cref="PartTimeHoursEmpty"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string PartTimeHoursEmptyKey = "PartTimeHoursEmpty";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>This email is already being used</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmailAlreadyExsists { get { return GetResourceString(EmailAlreadyExsistsKey); } }

		/// <summary>
		/// Resource key for <see cref="EmailAlreadyExsists"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailAlreadyExsistsKey = "EmailAlreadyExsists";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Email domain is not valid</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string WrongEmailDomain { get { return GetResourceString(WrongEmailDomainKey); } }

		/// <summary>
		/// Resource key for <see cref="WrongEmailDomain"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string WrongEmailDomainKey = "WrongEmailDomain";

		

	}
}


namespace Shrooms.Resources.Models.ApplicationUser  {
		
	public partial class ApplicationUser {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Has picture</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string HasPicture { get { return GetResourceString(HasPictureKey); } }

		/// <summary>
		/// Resource key for <see cref="HasPicture"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string HasPictureKey = "HasPicture";

		

	}
}


namespace Shrooms.Resources.Models.Books  {
	[Utilities.Localized]	
	public partial class Books {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.Books^Books");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.Books.Books", typeof(Books).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Book was not found.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NoBook { get { return GetResourceString(NoBookKey); } }

		/// <summary>
		/// Resource key for <see cref="NoBook"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NoBookKey = "NoBook";

		

	}
}


namespace Shrooms.Resources.Models.Books  {
		
	public partial class Books {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Same book is already registered as taken by you.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string UserAlreadyHasSameBook { get { return GetResourceString(UserAlreadyHasSameBookKey); } }

		/// <summary>
		/// Resource key for <see cref="UserAlreadyHasSameBook"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string UserAlreadyHasSameBookKey = "UserAlreadyHasSameBook";

		

	}
}


namespace Shrooms.Resources.Models.Books  {
		
	public partial class Books {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>All books are already returned.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NoBooksToReturn { get { return GetResourceString(NoBooksToReturnKey); } }

		/// <summary>
		/// Resource key for <see cref="NoBooksToReturn"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NoBooksToReturnKey = "NoBooksToReturn";

		

	}
}


namespace Shrooms.Resources.Models.Books  {
		
	public partial class Books {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Book already exists, please go to Simoona and increase the quantity of that book</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string BookAlreadyExist { get { return GetResourceString(BookAlreadyExistKey); } }

		/// <summary>
		/// Resource key for <see cref="BookAlreadyExist"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string BookAlreadyExistKey = "BookAlreadyExist";

		

	}
}


namespace Shrooms.Resources.Models.Books  {
		
	public partial class Books {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Office does not exist</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NoOffice { get { return GetResourceString(NoOfficeKey); } }

		/// <summary>
		/// Resource key for <see cref="NoOffice"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NoOfficeKey = "NoOffice";

		

	}
}


namespace Shrooms.Resources.Models.Books  {
		
	public partial class Books {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>This book is already taken, please contact administration.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NoAvailableBooks { get { return GetResourceString(NoAvailableBooksKey); } }

		/// <summary>
		/// Resource key for <see cref="NoAvailableBooks"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NoAvailableBooksKey = "NoAvailableBooks";

		

	}
}


namespace Shrooms.Resources.Models.Books  {
		
	public partial class Books {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>User does not exist</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string UserDoesNotExist { get { return GetResourceString(UserDoesNotExistKey); } }

		/// <summary>
		/// Resource key for <see cref="UserDoesNotExist"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string UserDoesNotExistKey = "UserDoesNotExist";

		

	}
}


namespace Shrooms.Resources.Models.Books  {
		
	public partial class Books {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Book was not found, please fill info manually.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NoBooksInGoogleApi { get { return GetResourceString(NoBooksInGoogleApiKey); } }

		/// <summary>
		/// Resource key for <see cref="NoBooksInGoogleApi"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NoBooksInGoogleApiKey = "NoBooksInGoogleApi";

		

	}
}


namespace Shrooms.Resources.Models.Books  {
		
	public partial class Books {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Book cannot be returned</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string BookCannotBeReturned { get { return GetResourceString(BookCannotBeReturnedKey); } }

		/// <summary>
		/// Resource key for <see cref="BookCannotBeReturned"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string BookCannotBeReturnedKey = "BookCannotBeReturned";

		

	}
}


namespace Shrooms.Resources.Models.Books  {
		
	public partial class Books {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Book registered as taken notification</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmailSubject { get { return GetResourceString(EmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="EmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailSubjectKey = "EmailSubject";

		

	}
}


namespace Shrooms.Resources.Models.Committee  {
	[Utilities.Localized]	
	public partial class Committee {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.Committee^Committee");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.Committee.Committee", typeof(Committee).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Committee with the same Id already exists in the database.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string CommitteeIdException { get { return GetResourceString(CommitteeIdExceptionKey); } }

		/// <summary>
		/// Resource key for <see cref="CommitteeIdException"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string CommitteeIdExceptionKey = "CommitteeIdException";

		

	}
}


namespace Shrooms.Resources.Models.Committee  {
		
	public partial class Committee {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Committe was not found in database.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ModelNotFoundException { get { return GetResourceString(ModelNotFoundExceptionKey); } }

		/// <summary>
		/// Resource key for <see cref="ModelNotFoundException"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ModelNotFoundExceptionKey = "ModelNotFoundException";

		

	}
}


namespace Shrooms.Resources.Models.Committee  {
		
	public partial class Committee {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Name and description are required.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NameDescriptionError { get { return GetResourceString(NameDescriptionErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="NameDescriptionError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NameDescriptionErrorKey = "NameDescriptionError";

		

	}
}


namespace Shrooms.Resources.Models.Committee  {
		
	public partial class Committee {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Selected committee not found</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string SuggestionCommiteNotFound { get { return GetResourceString(SuggestionCommiteNotFoundKey); } }

		/// <summary>
		/// Resource key for <see cref="SuggestionCommiteNotFound"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string SuggestionCommiteNotFoundKey = "SuggestionCommiteNotFound";

		

	}
}


namespace Shrooms.Resources.Models.Committee  {
		
	public partial class Committee {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Title is required</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string SuggestionTitleError { get { return GetResourceString(SuggestionTitleErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="SuggestionTitleError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string SuggestionTitleErrorKey = "SuggestionTitleError";

		

	}
}


namespace Shrooms.Resources.Models.Events  {
	[Utilities.Localized]	
	public partial class Events {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.Events^Events");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.Events.Events", typeof(Events).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Events</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ResetParticipantListEmailSubject { get { return GetResourceString(ResetParticipantListEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="ResetParticipantListEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ResetParticipantListEmailSubjectKey = "ResetParticipantListEmailSubject";

		

	}
}


namespace Shrooms.Resources.Models.Events  {
		
	public partial class Events {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Count</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Count { get { return GetResourceString(CountKey); } }

		/// <summary>
		/// Resource key for <see cref="Count"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string CountKey = "Count";

		

	}
}


namespace Shrooms.Resources.Models.Events  {
		
	public partial class Events {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Option</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Option { get { return GetResourceString(OptionKey); } }

		/// <summary>
		/// Resource key for <see cref="Option"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string OptionKey = "Option";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
	[Utilities.Localized]	
	public partial class Floor {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.Floor^Floor");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.Floor.Floor", typeof(Floor).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Copy emails to clipboard</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string CopyEmailsToClipboard { get { return GetResourceString(CopyEmailsToClipboardKey); } }

		/// <summary>
		/// Resource key for <see cref="CopyEmailsToClipboard"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string CopyEmailsToClipboardKey = "CopyEmailsToClipboard";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New Floor</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string CreateFloor { get { return GetResourceString(CreateFloorKey); } }

		/// <summary>
		/// Resource key for <see cref="CreateFloor"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string CreateFloorKey = "CreateFloor";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Current Plan</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string CurrentPlan { get { return GetResourceString(CurrentPlanKey); } }

		/// <summary>
		/// Resource key for <see cref="CurrentPlan"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string CurrentPlanKey = "CurrentPlan";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Edit Floor</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EditFloor { get { return GetResourceString(EditFloorKey); } }

		/// <summary>
		/// Resource key for <see cref="EditFloor"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EditFloorKey = "EditFloor";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>This floor</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmailOptionFloor { get { return GetResourceString(EmailOptionFloorKey); } }

		/// <summary>
		/// Resource key for <see cref="EmailOptionFloor"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailOptionFloorKey = "EmailOptionFloor";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>This office</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmailOptionOffice { get { return GetResourceString(EmailOptionOfficeKey); } }

		/// <summary>
		/// Resource key for <see cref="EmailOptionOffice"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailOptionOfficeKey = "EmailOptionOffice";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Selected room</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmailOptionRoom { get { return GetResourceString(EmailOptionRoomKey); } }

		/// <summary>
		/// Resource key for <see cref="EmailOptionRoom"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailOptionRoomKey = "EmailOptionRoom";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Emails</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Emails { get { return GetResourceString(EmailsKey); } }

		/// <summary>
		/// Resource key for <see cref="Emails"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailsKey = "Emails";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Floor</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EntityName { get { return GetResourceString(EntityNameKey); } }

		/// <summary>
		/// Resource key for <see cref="EntityName"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EntityNameKey = "EntityName";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Floors</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EntityNamePlural { get { return GetResourceString(EntityNamePluralKey); } }

		/// <summary>
		/// Resource key for <see cref="EntityNamePlural"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EntityNamePluralKey = "EntityNamePlural";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Floor Data</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string FloorData { get { return GetResourceString(FloorDataKey); } }

		/// <summary>
		/// Resource key for <see cref="FloorData"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string FloorDataKey = "FloorData";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Map</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Map { get { return GetResourceString(MapKey); } }

		/// <summary>
		/// Resource key for <see cref="Map"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string MapKey = "Map";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Title</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Name { get { return GetResourceString(NameKey); } }

		/// <summary>
		/// Resource key for <see cref="Name"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NameKey = "Name";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Upload New Plan</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NewPlanUpload { get { return GetResourceString(NewPlanUploadKey); } }

		/// <summary>
		/// Resource key for <see cref="NewPlanUpload"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NewPlanUploadKey = "NewPlanUpload";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Office</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Office { get { return GetResourceString(OfficeKey); } }

		/// <summary>
		/// Resource key for <see cref="Office"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string OfficeKey = "Office";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Rooms</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string Rooms { get { return GetResourceString(RoomsKey); } }

		/// <summary>
		/// Resource key for <see cref="Rooms"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string RoomsKey = "Rooms";

		

	}
}


namespace Shrooms.Resources.Models.Floor  {
		
	public partial class Floor {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Successfully copied to clipboard!</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string SuccessToClipboard { get { return GetResourceString(SuccessToClipboardKey); } }

		/// <summary>
		/// Resource key for <see cref="SuccessToClipboard"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string SuccessToClipboardKey = "SuccessToClipboard";

		

	}
}


namespace Shrooms.Resources.Models.GoogleCalendar  {
	[Utilities.Localized]	
	public partial class GoogleCalendar {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.GoogleCalendar^GoogleCalendar");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.GoogleCalendar.GoogleCalendar", typeof(GoogleCalendar).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Google Calendar Event was not created</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EventNullError { get { return GetResourceString(EventNullErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="EventNullError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EventNullErrorKey = "EventNullError";

		

	}
}


namespace Shrooms.Resources.Models.GoogleCalendar  {
		
	public partial class GoogleCalendar {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Google Calendar Api service is not created</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ServiceNullError { get { return GetResourceString(ServiceNullErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="ServiceNullError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ServiceNullErrorKey = "ServiceNullError";

		

	}
}


namespace Shrooms.Resources.Models.GoogleCalendar  {
		
	public partial class GoogleCalendar {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Google Calendar Event couln&apos;t be updated</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string UpdateError { get { return GetResourceString(UpdateErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="UpdateError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string UpdateErrorKey = "UpdateError";

		

	}
}


namespace Shrooms.Resources.Models.GoogleCalendar  {
		
	public partial class GoogleCalendar {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>X509Certificate file not found</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string X509CertificateNotFoundError { get { return GetResourceString(X509CertificateNotFoundErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="X509CertificateNotFoundError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string X509CertificateNotFoundErrorKey = "X509CertificateNotFoundError";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
	[Utilities.Localized]	
	public partial class Kudos {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.Kudos^Kudos");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.Kudos.Kudos", typeof(Kudos).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Fill the form correctly</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string KudosifyModalError { get { return GetResourceString(KudosifyModalErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="KudosifyModalError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string KudosifyModalErrorKey = "KudosifyModalError";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>You&apos;ve received new kudos!</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmailSubject { get { return GetResourceString(EmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="EmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailSubjectKey = "EmailSubject";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Your kudos have been reduced.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string MinusKudosEmailSubject { get { return GetResourceString(MinusKudosEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="MinusKudosEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string MinusKudosEmailSubjectKey = "MinusKudosEmailSubject";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Your kudos request was rejected</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string RejectedKudosEmailSubject { get { return GetResourceString(RejectedKudosEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="RejectedKudosEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string RejectedKudosEmailSubjectKey = "RejectedKudosEmailSubject";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Minus</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string KudosTypeMinus { get { return GetResourceString(KudosTypeMinusKey); } }

		/// <summary>
		/// Resource key for <see cref="KudosTypeMinus"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string KudosTypeMinusKey = "KudosTypeMinus";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Other</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string KudosTypeOther { get { return GetResourceString(KudosTypeOtherKey); } }

		/// <summary>
		/// Resource key for <see cref="KudosTypeOther"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string KudosTypeOtherKey = "KudosTypeOther";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Send</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string KudosTypeSend { get { return GetResourceString(KudosTypeSendKey); } }

		/// <summary>
		/// Resource key for <see cref="KudosTypeSend"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string KudosTypeSendKey = "KudosTypeSend";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Comment</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnComment { get { return GetResourceString(ExportColumnCommentKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnComment"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnCommentKey = "ExportColumnComment";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Created</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnCreated { get { return GetResourceString(ExportColumnCreatedKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnCreated"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnCreatedKey = "ExportColumnCreated";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Kudos Type</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnKudosType { get { return GetResourceString(ExportColumnKudosTypeKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnKudosType"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnKudosTypeKey = "ExportColumnKudosType";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Kudos Type Value</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnKudosTypeValue { get { return GetResourceString(ExportColumnKudosTypeValueKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnKudosTypeValue"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnKudosTypeValueKey = "ExportColumnKudosTypeValue";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Multiply By</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnMultiplyBy { get { return GetResourceString(ExportColumnMultiplyByKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnMultiplyBy"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnMultiplyByKey = "ExportColumnMultiplyBy";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Points In Total</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnPointsInTotal { get { return GetResourceString(ExportColumnPointsInTotalKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnPointsInTotal"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnPointsInTotalKey = "ExportColumnPointsInTotal";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Receiver</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnReceiver { get { return GetResourceString(ExportColumnReceiverKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnReceiver"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnReceiverKey = "ExportColumnReceiver";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Rejection Message</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnRejectionMessage { get { return GetResourceString(ExportColumnRejectionMessageKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnRejectionMessage"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnRejectionMessageKey = "ExportColumnRejectionMessage";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Sender</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnSender { get { return GetResourceString(ExportColumnSenderKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnSender"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnSenderKey = "ExportColumnSender";

		

	}
}


namespace Shrooms.Resources.Models.Kudos  {
		
	public partial class Kudos {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Status</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnStatus { get { return GetResourceString(ExportColumnStatusKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnStatus"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnStatusKey = "ExportColumnStatus";

		

	}
}


namespace Shrooms.Resources.Models.Role  {
	[Utilities.Localized]	
	public partial class Role {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.Role^Role");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.Role.Role", typeof(Role).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Such role name already exists.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string RoleNameExistsError { get { return GetResourceString(RoleNameExistsErrorKey); } }

		/// <summary>
		/// Resource key for <see cref="RoleNameExistsError"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string RoleNameExistsErrorKey = "RoleNameExistsError";

		

	}
}


namespace Shrooms.Resources.Models.Room  {
	[Utilities.Localized]	
	public partial class Room {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.Room^Room");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.Room.Room", typeof(Room).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Room</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EntityName { get { return GetResourceString(EntityNameKey); } }

		/// <summary>
		/// Resource key for <see cref="EntityName"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EntityNameKey = "EntityName";

		

	}
}


namespace Shrooms.Resources.Models.RoomType  {
	[Utilities.Localized]	
	public partial class RoomType {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.RoomType^RoomType");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.RoomType.RoomType", typeof(RoomType).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Same Room type name allready exists.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string RoomTypePostError1 { get { return GetResourceString(RoomTypePostError1Key); } }

		/// <summary>
		/// Resource key for <see cref="RoomTypePostError1"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string RoomTypePostError1Key = "RoomTypePostError1";

		

	}
}


namespace Shrooms.Resources.Models.RoomType  {
		
	public partial class RoomType {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Same Room type allready exists.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string RoomTypePutError1 { get { return GetResourceString(RoomTypePutError1Key); } }

		/// <summary>
		/// Resource key for <see cref="RoomTypePutError1"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string RoomTypePutError1Key = "RoomTypePutError1";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
	[Utilities.Localized]	
	public partial class ServiceRequest {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.ServiceRequest^ServiceRequest");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.ServiceRequest.ServiceRequest", typeof(ServiceRequest).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Service request fields Title, Description must be filled</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string NotAllRequiredFieldsFilled { get { return GetResourceString(NotAllRequiredFieldsFilledKey); } }

		/// <summary>
		/// Resource key for <see cref="NotAllRequiredFieldsFilled"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string NotAllRequiredFieldsFilledKey = "NotAllRequiredFieldsFilled";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New service request has been created.</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmailMessageBody { get { return GetResourceString(EmailMessageBodyKey); } }

		/// <summary>
		/// Resource key for <see cref="EmailMessageBody"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailMessageBodyKey = "EmailMessageBody";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>New service request</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string EmailMessageSubject { get { return GetResourceString(EmailMessageSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="EmailMessageSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string EmailMessageSubjectKey = "EmailMessageSubject";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Category</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNameCategory { get { return GetResourceString(ExportColumnNameCategoryKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNameCategory"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNameCategoryKey = "ExportColumnNameCategory";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Created</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNameDate { get { return GetResourceString(ExportColumnNameDateKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNameDate"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNameDateKey = "ExportColumnNameDate";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Last modified</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNameModified { get { return GetResourceString(ExportColumnNameModifiedKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNameModified"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNameModifiedKey = "ExportColumnNameModified";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Modified by</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNameModifiedBy { get { return GetResourceString(ExportColumnNameModifiedByKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNameModifiedBy"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNameModifiedByKey = "ExportColumnNameModifiedBy";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Priority</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNamePriority { get { return GetResourceString(ExportColumnNamePriorityKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNamePriority"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNamePriorityKey = "ExportColumnNamePriority";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Status</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNameStatus { get { return GetResourceString(ExportColumnNameStatusKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNameStatus"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNameStatusKey = "ExportColumnNameStatus";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Title</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNameTitle { get { return GetResourceString(ExportColumnNameTitleKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNameTitle"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNameTitleKey = "ExportColumnNameTitle";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Created by</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNameUser { get { return GetResourceString(ExportColumnNameUserKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNameUser"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNameUserKey = "ExportColumnNameUser";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Description</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNameDescription { get { return GetResourceString(ExportColumnNameDescriptionKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNameDescription"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNameDescriptionKey = "ExportColumnNameDescription";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Kudos amount</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNameKudosAmount { get { return GetResourceString(ExportColumnNameKudosAmountKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNameKudosAmount"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNameKudosAmountKey = "ExportColumnNameKudosAmount";

		

	}
}


namespace Shrooms.Resources.Models.ServiceRequest  {
		
	public partial class ServiceRequest {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Kudos shop item</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string ExportColumnNameKudosShopItem { get { return GetResourceString(ExportColumnNameKudosShopItemKey); } }

		/// <summary>
		/// Resource key for <see cref="ExportColumnNameKudosShopItem"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string ExportColumnNameKudosShopItemKey = "ExportColumnNameKudosShopItem";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
	[Utilities.Localized]	
	public partial class Vacations {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Models.Vacations^Vacations");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Models.Vacations.Vacations", typeof(Vacations).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Cannot assing deputy as yourself</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string cannotDeputyYourself { get { return GetResourceString(cannotDeputyYourselfKey); } }

		/// <summary>
		/// Resource key for <see cref="cannotDeputyYourself"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string cannotDeputyYourselfKey = "cannotDeputyYourself";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Deputy not found</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string deputyNotFound { get { return GetResourceString(deputyNotFoundKey); } }

		/// <summary>
		/// Resource key for <see cref="deputyNotFound"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string deputyNotFoundKey = "deputyNotFound";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>No deputy selected</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string noDeputySelected { get { return GetResourceString(noDeputySelectedKey); } }

		/// <summary>
		/// Resource key for <see cref="noDeputySelected"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string noDeputySelectedKey = "noDeputySelected";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>You are not authorized to do this action</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string notAuthorized { get { return GetResourceString(notAuthorizedKey); } }

		/// <summary>
		/// Resource key for <see cref="notAuthorized"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string notAuthorizedKey = "notAuthorized";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>No selected vacation found</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string noVacationFound { get { return GetResourceString(noVacationFoundKey); } }

		/// <summary>
		/// Resource key for <see cref="noVacationFound"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string noVacationFoundKey = "noVacationFound";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Vacation type is not selected</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string typeNotSelected { get { return GetResourceString(typeNotSelectedKey); } }

		/// <summary>
		/// Resource key for <see cref="typeNotSelected"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string typeNotSelectedKey = "typeNotSelected";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>You have another vacation set up at this time</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string vacationAlreadyExsists { get { return GetResourceString(vacationAlreadyExsistsKey); } }

		/// <summary>
		/// Resource key for <see cref="vacationAlreadyExsists"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string vacationAlreadyExsistsKey = "vacationAlreadyExsists";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Cannot cancel vacation in progress</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string vacationInProgress { get { return GetResourceString(vacationInProgressKey); } }

		/// <summary>
		/// Resource key for <see cref="vacationInProgress"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string vacationInProgressKey = "vacationInProgress";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Wrong vacation period</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string wrongVacationPeriod { get { return GetResourceString(wrongVacationPeriodKey); } }

		/// <summary>
		/// Resource key for <see cref="wrongVacationPeriod"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string wrongVacationPeriodKey = "wrongVacationPeriod";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Vacation cancelation</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string cancelVacationEmailSubject { get { return GetResourceString(cancelVacationEmailSubjectKey); } }

		/// <summary>
		/// Resource key for <see cref="cancelVacationEmailSubject"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string cancelVacationEmailSubjectKey = "cancelVacationEmailSubject";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>&lt;div&gt; Hello, {0}, &lt;/br&gt;&lt;/br&gt;Your &lt;b&gt;{1}&lt;/b&gt; vacations from &lt;b&gt;{2}&lt;/b&gt; to &lt;b&gt;{3}&lt;/b&gt; has been canceled. &lt;/br&gt;&lt;/br&gt;Have a good day.&lt;/div&gt;</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string cancelVacationEmailTemplateFormatted(params object[] args) { return GetResourceString("cancelVacationEmailTemplate", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>&lt;div&gt; Hello, {0}, &lt;/br&gt;&lt;/br&gt;Your &lt;b&gt;{1}&lt;/b&gt; vacations from &lt;b&gt;{2}&lt;/b&gt; to &lt;b&gt;{3}&lt;/b&gt; has been canceled. &lt;/br&gt;&lt;/br&gt;Have a good day.&lt;/div&gt;</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string cancelVacationEmailTemplate { get { return GetResourceString(cancelVacationEmailTemplateKey); } }

		/// <summary>
		/// Resource key for <see cref="cancelVacationEmailTemplate"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string cancelVacationEmailTemplateKey = "cancelVacationEmailTemplate";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{2}/{1}/{0}</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string dateFormatFormatted(params object[] args) { return GetResourceString("dateFormat", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>{2}/{1}/{0}</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string dateFormat { get { return GetResourceString(dateFormatKey); } }

		/// <summary>
		/// Resource key for <see cref="dateFormat"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string dateFormatKey = "dateFormat";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>You have {0} available days</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string youHaveAvailableDaysFormatted(params object[] args) { return GetResourceString("youHaveAvailableDays", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>You have {0} available days</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string youHaveAvailableDays { get { return GetResourceString(youHaveAvailableDaysKey); } }

		/// <summary>
		/// Resource key for <see cref="youHaveAvailableDays"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string youHaveAvailableDaysKey = "youHaveAvailableDays";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Not enough data</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string notEnoughData { get { return GetResourceString(notEnoughDataKey); } }

		/// <summary>
		/// Resource key for <see cref="notEnoughData"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string notEnoughDataKey = "notEnoughData";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Pasirinktas blogas laiko intervalas {0} {1} pavaduotojui</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string wrongDeputyDateSelectedFormatted(params object[] args) { return GetResourceString("wrongDeputyDateSelected", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Pasirinktas blogas laiko intervalas {0} {1} pavaduotojui</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string wrongDeputyDateSelected { get { return GetResourceString(wrongDeputyDateSelectedKey); } }

		/// <summary>
		/// Resource key for <see cref="wrongDeputyDateSelected"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string wrongDeputyDateSelectedKey = "wrongDeputyDateSelected";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Vacation time is not fully covered by deputies</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string vacationTimeNotCovered { get { return GetResourceString(vacationTimeNotCoveredKey); } }

		/// <summary>
		/// Resource key for <see cref="vacationTimeNotCovered"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string vacationTimeNotCoveredKey = "vacationTimeNotCovered";

		

	}
}


namespace Shrooms.Resources.Models.Vacations  {
		
	public partial class Vacations {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>There can only be one deputy active at the same time</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string tooManyDeputiesAtTheSameTime { get { return GetResourceString(tooManyDeputiesAtTheSameTimeKey); } }

		/// <summary>
		/// Resource key for <see cref="tooManyDeputiesAtTheSameTime"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string tooManyDeputiesAtTheSameTimeKey = "tooManyDeputiesAtTheSameTime";

		

	}
}


namespace Shrooms.Resources.Widgets.KudosBasket  {
	[Utilities.Localized]	
	public partial class KudosBasket {
	

		///<summary>
		/// Return this class as a Dictionary&lt;class, Dictionary&lt;key, value&gt;&gt;
		///</summary>
		public static Dictionary<string, Dictionary<string, string>> GetAsDictionary() {
			return Utilities.GetResourcesByNameSpace("Widgets.KudosBasket^KudosBasket");
		}

		private static System.Resources.ResourceManager _resourceManager;    
	
		///<summary>
		/// Get the ResourceManager
		///</summary>
		private static System.Resources.ResourceManager ResourceManager 
		{
			get 
			{
				return _resourceManager ?? (_resourceManager = new System.Resources.ResourceManager("Shrooms.Resources.Widgets.KudosBasket.KudosBasket", typeof(KudosBasket).Assembly));
			}
		}

		///<summary>
		///	Get localized entry for a given key
		///</summary>
		public static string GetResourceString(string key, params object[] args)
		{
			var value = ResourceManager.GetString(key, Thread.CurrentThread.CurrentCulture);

			if (!string.IsNullOrEmpty(value))
			{
				var regex  = @"{\b\p{Lu}{3,}\b}";
				var tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();
					tokens
						.ForEach(t =>
						{
							value = value.Replace(t, Utilities.GetReplacementString(t.Replace("{", "").Replace("}", "")));
						});

				if (args.Any())
				{
					regex  = @"{[0-9]{1}}";
					tokens = Regex.Matches(value, regex).Cast<Match>().Select(m => m.Value).ToList();

					if (tokens.Any())
					{
						// If argument length is less than token length, add an error message
						// This can happen if arguments are accidentally forgottent in a translation
						if (args.Count() < tokens.Count())
						{
							var newArgs = new List<object>();
							for (var i = 0; i < tokens.Count(); i++)
							{
								newArgs.Add(args.Length > i ? args[i] : "argument {" + i + "} is undefined");
							}

							args = newArgs.ToArray();
						}

						value = string.Format(value, args);
					}
				}		        		
			}
	
			return value;
		} 
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Donation to kudos basket: {0} </description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		public static string KudosBasketDonationCommentFormatted(params object[] args) { return GetResourceString("KudosBasketDonationComment", args); }
		

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Donation to kudos basket: {0} </description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string KudosBasketDonationComment { get { return GetResourceString(KudosBasketDonationCommentKey); } }

		/// <summary>
		/// Resource key for <see cref="KudosBasketDonationComment"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string KudosBasketDonationCommentKey = "KudosBasketDonationComment";

		

	}
}


namespace Shrooms.Resources.Widgets.KudosBasket  {
		
	public partial class KudosBasket {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>You do not have enough kudos points</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string KudosBasketNotEnoughKudos { get { return GetResourceString(KudosBasketNotEnoughKudosKey); } }

		/// <summary>
		/// Resource key for <see cref="KudosBasketNotEnoughKudos"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string KudosBasketNotEnoughKudosKey = "KudosBasketNotEnoughKudos";

		

	}
}


namespace Shrooms.Resources.Widgets.KudosBasket  {
		
	public partial class KudosBasket {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Requested kudos basket does not exist</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string KudosBasketNotExists { get { return GetResourceString(KudosBasketNotExistsKey); } }

		/// <summary>
		/// Resource key for <see cref="KudosBasketNotExists"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string KudosBasketNotExistsKey = "KudosBasketNotExists";

		

	}
}


namespace Shrooms.Resources.Widgets.KudosBasket  {
		
	public partial class KudosBasket {
	

		///<summary>
		///    <list type='bullet'>
		///        <item>
		///            <description>Kudos basket is inactive</description>
		///        </item>
		///        <item>
		///            <description></description>
		///        </item>
		///    </list>
		///</summary>
		[Utilities.Localized]
		public static string KudosBasketInactive { get { return GetResourceString(KudosBasketInactiveKey); } }

		/// <summary>
		/// Resource key for <see cref="KudosBasketInactive"/>
		/// You can use it e.g. in validation attributes for <see cref="System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> parameter.
		/// </summary>
		public const string KudosBasketInactiveKey = "KudosBasketInactive";

		

	}
}

